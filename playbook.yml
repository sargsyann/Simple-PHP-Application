---
# ansible-playbook apache-playbook.yml -i hosts.ini -vv -K
- hosts: web
  become: true
  remote_user: web
  vars_files:
    - ./vars/main.yml

  pre_tasks:
    - name: Download galaxy roles
      command: ansible-galaxy install -r ./requirements.yml
      become: no
      delegate_to: localhost

  tasks:
    - name: Install apt packages
      apt:
        name: "{{ apt_packages }}"
        state: present
        update_cache: true

    - name: Install python packages
      pip:
        name: "{{ python_packages }}"
        state: latest

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker packages
      apt:
        name: "{{ docker_packages }}"
        state: present
        update_cache: true

    - name: Start service Docker, if not started
      ansible.builtin.service:
        name: docker
        state: started

    - name: Create directory
      file:
        path: "{{ app_target_dir }}"
        state: directory
        recurse: true

    - name: Copy files
      copy:
        src: "{{ file_item }}"
        dest: "{{ app_target_dir }}"
      with_items: "{{ files }}"
      loop_control:
        loop_var: file_item

    - name: Build PHP image
      community.docker.docker_image:
        name: mytask/php:latest
        build:
          path: "{{ app_target_dir }}"
        source: build

    - name: Run MySQL container
      community.docker.docker_container:
        name: mysql
        image: mysql
        state: started
        recreate: true
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: devdb
          MYSQL_USER: devuser
          MYSQL_PASSWORD: devpass

    - name: Run PHP container-1
      community.docker.docker_container:
        name: web-1
        image: mytask/php:latest
        state: started
        links:
          - mysql
        volumes:
          - "{{ app_target_dir }}data:/var/www/html"
        recreate: true
        tty: true
        ports:
          - "8081:80"

    - name: Run PHP container-2
      community.docker.docker_container:
        name: web-2
        image: mytask/php:latest
        state: started
        links:
          - mysql
        volumes:
          - "{{ app_target_dir }}data:/var/www/html"
        recreate: true
        tty: true
        ports:
          - "8082:80"

    - name: Run Nginx Container
      community.docker.docker_container:
        name: nginx
        image: nginx
        state: started
        links:
          - web-1
          - web-2
        volumes:
          - "{{ app_target_dir }}nginx.default.conf:/etc/nginx/conf.d/default.conf"
        recreate: true
        tty: true
        ports:
          - "8000:80"
